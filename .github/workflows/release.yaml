# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release

on:
  push:
    branches: [ main ]

jobs:

  release:
    runs-on: ubuntu-latest
    concurrency: release

    if: github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v2

      # Create Version
      - name: Create Version
        id: create_version
        uses: paulhatch/semantic-version@v4.0.3
        with:
          # The prefix to use to identify tags
          branch: ${{ github.ref_name }}
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          # change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          # namespace: project-b
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v2.0.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      #Add Date To Changelog
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Modify the changelog
        id: modified
        run: |
          set -o noglob
          log=$(cat << "EOF" | sed '/gh-pages\|skip actions/d' | tac
          ${{ steps.changelog.outputs.changelog }}
          ${{
          steps.date.outputs.date }}
          EOF
          )
          log="${log//'%'/'%25'}"
          log="${log//$'\n'/'%0A'}"
          log="${log//$'\r'/'%0D'}"
          echo "::set-output name=modified::$log"
      - name: Print the modified changelog
        run: |
          cat << "EOF"
          ${{ steps.modified.outputs.modified }}
          EOF

      #Create Release
      - name: Create Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.create_version.outputs.version }}
          prerelease: false



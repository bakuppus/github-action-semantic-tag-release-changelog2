# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release

on:
  push:
    branches: [ main ]

jobs:

  versioning:

    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: paulhatch/semantic-version@v4.0.2
        id: versioning
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-rc${increment}"
          bump_each_commit: false



      - name: Run Changelog CI
        uses: saadmk11/changelog-ci@v1.0.0
        id: generate-full-changelog
        with:
          # Optional, you can provide any name for your changelog file,
          # We currently support Markdown (.md) and reStructuredText (.rst) files
          # defaults to `CHANGELOG.md` if not provided.
          #changelog_filename: .github/changelog-ci-config.yaml
          # Optional, only required when you want more customization
          # e.g: group your changelog by labels with custom titles,
          # different version prefix, pull request title and version number regex etc.
          # config file can be in JSON or YAML format.
          config_file: .github/changelog-ci-config.yaml
          # Optional, This will be used to configure git
          # defaults to `github-actions[bot]` if not provided.
          #committer_username: 'test'
          #committer_email: 'test@test.com'
          # Optional, only required when you want to run Changelog CI
          # on an event other than `pull_request` event.
          # In this example `release_version` is fetched from `workflow_dispatch` events input.
          # You can use any other method to fetch the release version
          # such as environment variable or from output of another action
          release_version: ${{ steps.versioning.outputs.version }}
          # Optional
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@latest
        with:
          prerelease: false
          tag_name: v${{ steps.versioning.outputs.version }}
          release_name: v${{ steps.versioning.outputs.version }}
          body: ${{steps.generate-full-changelog.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


